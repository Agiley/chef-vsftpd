#!/bin/bash
#
# vsftpd      This shell script takes care of starting and stopping
#             standalone vsftpd.
#
# description: Vsftpd is a ftp daemon, which is the program \
#              that answers incoming ftp service requests.
# processname: vsftpd
# config:      <%= @node[:vsftpd][:config_path] %>

set -e

. /lib/lsb/init-functions

DAEMON=<%= @node[:vsftpd][:binary_path] %>
CONFIG=<%= @node[:vsftpd][:config_path] %>
NAME="vsftpd"
DESC="ftp server"
VSFTPD_OPTS=$CONFIG
PIDFILE="/var/run/$NAME.pid"

# Check if DAEMON binary exist
[ -f $DAEMON ] || exit 0

pid_from_file() {
  echo $PIDFILE
}

current_pid() {
  ps -ef | grep $DAEMON | grep -v grep | awk '{print $2}'
}

start_vsftpd() {
  log_daemon_msg "Starting $DESC" "$NAME"
  if start-stop-daemon \
    --start --background \
    --quiet --oknodo \
    --pidfile $PIDFILE --exec $DAEMON -- $VSFTPD_OPTS
  then
    #--make-pidfile apparently saves the wrong pid in the pid file, resort to manually create the pid-file.
    if [ -f $PIDFILE ]; then
      rm -f $PIDFILE
    fi
    
    touch $PIDFILE
    echo `current_pid` > $PIDFILE
    
    log_end_msg 0
  else
    log_end_msg 1
  fi
}

stop_vsftpd() {
    end_message=0
    
    log_daemon_msg "Stopping $DESC" "$NAME"
    if start-stop-daemon \
      --retry TERM/5/KILL/5 --stop --quiet \
      --pidfile $PIDFILE --exec $DAEMON -- $VSFTPD_OPTS
    then
      end_message=0
    else
      end_message=1
    fi
    
    if test -r $PIDFILE; then
        read -r PID < $PIDFILE
        if test ! -d /proc/$PID ; then
            # stale pidfile
            unset PID
            rm -f $PIDFILE
        fi
    fi
    
    counter=10
    stat=0
    while [ $stat -eq 0 -a $counter -gt 0 ]; do
    	PIDS=`current_pid`
    	
    	if [ "${PIDS}" = '' ]; then
    		stat=1
    	else
    		echo -n '.'
    		kill -9 $PIDS
    		sleep 1
    		let counter--
    	fi
    done
    
    if [ $stat -eq 1 ]; then
      end_message=0
    else
    	end_message=1
    fi
    
    if [ -f $PIDFILE ]; then
      rm -f $PIDFILE
    fi
    
    log_end_msg $end_message
}

reload_vsftpd() {
  log_daemon_msg "Reloading $DESC configuration" "$NAME"
  if start-stop-daemon \
    --stop --signal 1 --quiet \
    --oknodo --pidfile $PIDFILE \
    --exec $DAEMON -- $VSFTPD_OPTS
  then
    log_end_msg 0
  else
    log_end_msg 1
  fi
}

case "$1" in
  start)
    start_vsftpd
    ;;
  stop)
    stop_vsftpd
    ;;
  reload|force-reload)
    reload_vsftpd
    ;;
  restart)
    $0 stop
    $0 start
    ;;
  status)
    status_of_proc -p $PIDFILE $DAEMON $NAME
    ;;
  *)
    log_action_msg "Usage: /etc/init.d/$NAME {start|stop|reload|restart|status}"
    ;;
esac

exit 0